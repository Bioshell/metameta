rule kaiju_db_custom_1:
	output: faa = temp(config['dbdir'] + "{database}/kaiju_db/kaiju_db.faa")
	log: config['dbdir'] + "{database}/log/kaiju_db_custom_1.log"
	benchmark: config['dbdir'] + "{database}/log/kaiju_db_custom_1.time"
	conda: srcdir("../envs/kaiju.yaml")
	params: seq_folder = lambda wildcards: config[wildcards.database]["kaiju"]
	shell: "gbk2faa.pl <(cat {params.seq_folder}/*.gbff) {output.faa} > {log} 2>&1"

rule kaiju_db_custom_2:
	input: faa = config['dbdir'] + "{database}/kaiju_db/kaiju_db.faa"
	output: bwt = temp(config['dbdir'] + "{database}/kaiju_db/kaiju_db.bwt"),
			sa = temp(config['dbdir'] + "{database}/kaiju_db/kaiju_db.sa")
	log: config['dbdir'] + "{database}/log/kaiju_db_custom_2.log"
	benchmark: config['dbdir'] + "{database}/log/kaiju_db_custom_2.time"
	conda: srcdir("../envs/kaiju.yaml")
	shell: "mkbwt -n 5 -a ACDEFGHIKLMNPQRSTVWY -o {config[dbdir]}{wildcards.database}/kaiju_db/kaiju_db {input.faa} > {log} 2>&1"

rule kaiju_db_custom_3:
	input: bwt = config['dbdir'] + "{database}/kaiju_db/kaiju_db.bwt",
			sa = config['dbdir'] + "{database}/kaiju_db/kaiju_db.sa"
	output: fmi = config['dbdir'] + "{database}/kaiju_db/kaiju_db.fmi"
	log: config['dbdir'] + "{database}/log/kaiju_db_custom_3.log"
	benchmark: config['dbdir'] + "{database}/log/kaiju_db_custom_3.time"
	conda: srcdir("../envs/kaiju.yaml")
	shell: "mkfmi {config[dbdir]}{wildcards.database}/kaiju_db/kaiju_db > {log} 2>&1"

rule kaiju_db_custom_4:
	output: config['dbdir'] + "{database}/kaiju_db/nodes.dmp",
			taxdump = temp(config['dbdir'] + "{database}/kaiju_db/taxdump.tar.gz")
	log: config['dbdir'] + "{database}/log/kaiju_db_custom_4.log"
	benchmark: config['dbdir'] + "{database}/log/kaiju_db_custom_4.time"
	run:
		shell(download("ftp://ftp.ncbi.nih.gov/pub/taxonomy/taxdump.tar.gz", output.taxdump) + " > {log} 2>&1")
		shell("tar -zxvf {output.taxdump} -C {config[dbdir]}{wildcards.database}/kaiju_db/ nodes.dmp >> {log} 2>&1")
	
rule kaiju_db_custom_profile:
	output: config['dbdir'] + "{database}/kaiju.dbaccession.out"
	log: config['dbdir'] + "{database}/log/kaiju_db_custom_profile.log"
	benchmark: config['dbdir'] + "{database}/log/kaiju_db_custom_profile.time"
	params: seq_folder = lambda wildcards: config[wildcards.database]["kaiju"]
	# Recover all protein_id which contain translations
	shell: "grep -e '/translation=' -e '/protein_id=' <(cat {params.seq_folder}/*.gbff) | grep -B 1 '/translation=' | grep '/protein_id=' | grep -o '\".*\"' | sed 's/\"//g' > {output} 2> {log}"

rule kaiju_db_custom_check:
	input: config['dbdir'] + "{database}/kaiju.dbaccession.out",
			ancient(config['dbdir'] + "{database}/kaiju_db/kaiju_db.fmi"),
			ancient(config['dbdir'] + "{database}/kaiju_db/nodes.dmp")
	output: db_check = touch(config['dbdir'] + "{database}/kaiju_db_check.done")
	log: config['dbdir'] + "{database}/log/kaiju_db_custom_check.log"
	benchmark: config['dbdir'] + "{database}/log/kaiju_db_custom_check.time"
