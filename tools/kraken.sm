rule kraken_run_1:
	input:
		fq1="{sample}/reads/kraken.1.fq",
		dbcheck=config['dbdir'] + "{database}/kraken_db_check.done"
	output:	"{sample}/kraken/{database}/{sample}.results.out"
	log: "{sample}/log/{database}/kraken_run_1.log"
	benchmark: "{sample}/log/{database}/kraken_run_1.time"
	threads: config["threads"]
	conda: srcdir("../envs/kraken.yaml")
	params: reads_cmd = lambda wildcards: "--paired " + wildcards.sample + "/reads/kraken.1.fq " + wildcards.sample + "/reads/kraken.2.fq" if "fq2" in config["samples"][wildcards.sample] else wildcards.sample + "/reads/kraken.1.fq"
	shell: "{config[tool_alt_path][kraken]}kraken --preload -db {config[dbdir]}{wildcards.database}/kraken_db/ --output {output} --threads {threads} --fastq-input {params.reads_cmd} > {log} 2>&1"

rule kraken_rpt:
	input: "{sample}/kraken/{database}/{sample}.results.out"
	output: "{sample}/profiles/{database}/kraken.profile.out"
	log: "{sample}/log/{database}/kraken_rpt.log"
	benchmark: "{sample}/log/{database}/kraken_rpt.time"
	shell: """awk -F "\t" '{{if($1=="C") print $2"\t"$3"\t"$4}}' {input} > {output} 2> {log}"""
